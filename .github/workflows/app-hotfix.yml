name: App hotfix Process

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: "Tag of the latest stable version"
        required: true
      hotfixBranch:
        description: "Name of the hotfix branch"
        required: true

jobs:
  create-hotfix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate tag and create hotfix branch
        run: |
          #!/bin/bash
          set -e

          TAG_NAME="${{ github.event.inputs.tagName }}"
          HOTFIX_BRANCH="${{ github.event.inputs.hotfixBranch }}"

          # Check if the tag exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME exists. Creating hotfix branch $HOTFIX_BRANCH from $TAG_NAME."
          else
            echo "Tag $TAG_NAME does not exist. Exiting."
            exit 1
          fi
        env:
          SECRET: ${{ secrets.GH_SECRET }}

      - name: Create hotfix branch
        run: |
          #!/bin/bash
          set -e

          # Create a new branch from the tag
          git checkout -b "$HOTFIX_BRANCH" "$TAG_NAME"
          git push origin $HOTFIX_BRANCH
        env:
          SECRET: ${{ secrets.GH_SECRET }}

  apply-hotfix:
    needs: create-hotfix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout hotfix branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.hotfixBranch }}

      - name: Apply hotfix changes
        run: |
          #!/bin/bash
          set -e

          # Apply your hotfix changes here
          # For example, you could apply a patch file, make direct edits, etc.
          echo "Applying hotfix changes..."

          # Commit the hotfix changes
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git add .
          git commit -m "Apply hotfix changes"

          # Push the hotfix changes to the hotfix branch
          git push origin ${{ github.event.inputs.hotfixBranch }}
        shell: bash
        env:
          SECRET: ${{ secrets.GH_SECRET }}

  merge-hotfix:
    needs: apply-hotfix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Merge hotfix branch into main
        run: |
          #!/bin/bash
          set -e

          HOTFIX_BRANCH="${{ github.event.inputs.hotfixBranch }}"

          # Checkout main branch
          git checkout main

          # Merge the hotfix branch into main
          git merge --no-ff "$HOTFIX_BRANCH"

          # Push the changes to main
          git push origin main
        shell: bash
        env:
          SECRET: ${{ secrets.GH_SECRET }}

      - name: Create new tag for the hotfix
        run: |
          #!/bin/bash
          set -e

          # Create a new tag (you can customize the tag name/versioning as needed)
          NEW_TAG="v$(date +'%Y.%m.%d-%H%M%S')-hotfix"

          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"

          echo "New hotfix tag created: $NEW_TAG"
        shell: bash
        env:
          SECRET: ${{ secrets.GH_SECRET }}

      - name: Delete hotfix branch
        run: |
          #!/bin/bash
          set -e

          HOTFIX_BRANCH="${{ github.event.inputs.hotfixBranch }}"

          # Delete the hotfix branch locally and remotely
          git branch -d "$HOTFIX_BRANCH"
          git push origin --delete "$HOTFIX_BRANCH"
        shell: bash
        env:
          SECRET: ${{ secrets.GH_SECRET }}
